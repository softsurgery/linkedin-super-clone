generator client {
  provider = "prisma-client-js"
}

generator typescriptInterfaces {
  provider = "prisma-generator-typescript-interfaces"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  firstName     String?
  lastName      String?
  dateOfBirth   DateTime?
  isActive      Boolean?
  password      String?
  username      String?   @unique
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  roleId        Int?
  role          Role?     @relation(fields: [roleId], references: [id])
  refreshToken  String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  deletedAt     DateTime?
}

model Role {
  id          Int              @id @default(autoincrement())
  label       String
  description String?
  permissions RolePermission[]
  users       User[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now()) @updatedAt
  deletedAt   DateTime?
}

model Permission {
  id          Int              @id @default(autoincrement())
  label       String           @unique()
  description String?
  roles       RolePermission[]
  createdAt   DateTime         @default(now())
  updatedAt   DateTime         @default(now()) @updatedAt
  deletedAt   DateTime?
}

model RolePermission {
  id           Int        @id @default(autoincrement())
  roleId       Int
  permissionId Int
  role         Role       @relation(fields: [roleId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now()) @updatedAt
  deletedAt    DateTime?
}
